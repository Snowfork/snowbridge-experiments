/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BytesLike } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ValidatorRegistry } from "../ValidatorRegistry";

export class ValidatorRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    validatorSetMerkleRoot: BytesLike,
    overrides?: Overrides
  ): Promise<ValidatorRegistry> {
    return super.deploy(
      validatorSetMerkleRoot,
      overrides || {}
    ) as Promise<ValidatorRegistry>;
  }
  getDeployTransaction(
    validatorSetMerkleRoot: BytesLike,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(validatorSetMerkleRoot, overrides || {});
  }
  attach(address: string): ValidatorRegistry {
    return super.attach(address) as ValidatorRegistry;
  }
  connect(signer: Signer): ValidatorRegistry__factory {
    return super.connect(signer) as ValidatorRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ValidatorRegistry {
    return new Contract(address, _abi, signerOrProvider) as ValidatorRegistry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "validatorSetMerkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorUnregistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validatorAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "validatorAddressMerkleProof",
        type: "bytes32[]",
      },
    ],
    name: "checkValidatorInSet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "registerValidator",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "unregisterValidator",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorSetBitfield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d89380380610d898339818101604052810190610032919061011a565b8060006100436100fd60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600181905550506000602a9050806002819055505050610164565b600033905090565b6000815190506101148161014d565b92915050565b60006020828403121561012c57600080fd5b600061013a84828501610105565b91505092915050565b6000819050919050565b61015681610143565b811461016157600080fd5b50565b610c16806101736000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638da5cb5b11610076578063c81742601161005b578063c81742601461017e578063ebf0c717146101ae578063f2fde38b146101cc576100a3565b80638da5cb5b146101305780639fca51691461014e576100a3565b8063139ec11b146100a857806367b52d8c146100c65780636df4d241146100f6578063715018a614610126575b600080fd5b6100b06101e8565b6040516100bd9190610a8f565b60405180910390f35b6100e060048036038101906100db9190610928565b6101ee565b6040516100ed9190610a59565b60405180910390f35b610110600480360381019061010b919061097c565b61022d565b60405161011d9190610a59565b60405180910390f35b61012e6102e4565b005b61013861046a565b6040516101459190610a3e565b60405180910390f35b610168600480360381019061016391906108ff565b610493565b6040516101759190610a59565b60405180910390f35b610198600480360381019061019391906108ff565b610566565b6040516101a59190610a59565b60405180910390f35b6101b6610639565b6040516101c39190610a74565b60405180910390f35b6101e660048036038101906101e191906108ff565b61063f565b005b60025481565b600080836040516020016102029190610a23565b604051602081830303815290604052805190602001209050610224818461022d565b91505092915050565b60008083905060005b83518110156102d557600084828151811061024d57fe5b602002602001015190508083101561029557828160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092506102c7565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b508080600101915050610236565b50600154811491505092915050565b6102ec61084a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061049d61084a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461055d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60019050919050565b600061057061084a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610630576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60019050919050565b60015481565b61064761084a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610707576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561078d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610bbb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008135905061086181610b8c565b92915050565b600082601f83011261087857600080fd5b813561088b61088682610adb565b610aaa565b915081818352602084019350602081019050838560208402820111156108b057600080fd5b60005b838110156108e057816108c688826108ea565b8452602084019350602083019250506001810190506108b3565b5050505092915050565b6000813590506108f981610ba3565b92915050565b60006020828403121561091157600080fd5b600061091f84828501610852565b91505092915050565b6000806040838503121561093b57600080fd5b600061094985828601610852565b925050602083013567ffffffffffffffff81111561096657600080fd5b61097285828601610867565b9150509250929050565b6000806040838503121561098f57600080fd5b600061099d858286016108ea565b925050602083013567ffffffffffffffff8111156109ba57600080fd5b6109c685828601610867565b9150509250929050565b6109d981610b07565b82525050565b6109f06109eb82610b07565b610b59565b82525050565b6109ff81610b19565b82525050565b610a0e81610b25565b82525050565b610a1d81610b4f565b82525050565b6000610a2f82846109df565b60148201915081905092915050565b6000602082019050610a5360008301846109d0565b92915050565b6000602082019050610a6e60008301846109f6565b92915050565b6000602082019050610a896000830184610a05565b92915050565b6000602082019050610aa46000830184610a14565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610ad157610ad0610b7d565b5b8060405250919050565b600067ffffffffffffffff821115610af657610af5610b7d565b5b602082029050602081019050919050565b6000610b1282610b2f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b6482610b6b565b9050919050565b6000610b7682610b7f565b9050919050565bfe5b60008160601b9050919050565b610b9581610b07565b8114610ba057600080fd5b50565b610bac81610b25565b8114610bb757600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212202ed5ce52dad46764e39513d002889e23adc4438949fc53e21265224ef2fe937f64736f6c63430007050033";
