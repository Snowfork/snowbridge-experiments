/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { MMRVerification } from "../MMRVerification";

export class MMRVerification__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MMRVerification {
    return new Contract(address, _abi, signerOrProvider) as MMRVerification;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHeader",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "paraHead",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "paraHeadSiblingsProof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "messages",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "mmrSiblingsProof",
        type: "bytes32[]",
      },
    ],
    name: "executeMessages",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newMmrRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "signatures",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "bitmap",
        type: "uint8[]",
      },
    ],
    name: "updateMMR",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newMmrRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "signatures",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "bitmap",
        type: "uint8[]",
      },
      {
        internalType: "bytes32[]",
        name: "valPubKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "pubKeyProof",
        type: "bytes32[]",
      },
    ],
    name: "updateMMRWithValSet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];
